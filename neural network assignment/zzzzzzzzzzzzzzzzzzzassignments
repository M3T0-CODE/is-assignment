import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Define the OR gate input and output
# Input: [A, B], Output: A OR B
inputs = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
outputs = np.array([[0], [1], [1], [1]])

# Build the model
model = Sequential()
model.add(Dense(1, input_dim=2, activation='sigmoid'))  # One neuron, sigmoid activation

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(inputs, outputs, epochs=1000, verbose=0)  # Train for 1000 epochs

# Test the model
print("Predictions:")
for input_data, output_data in zip(inputs, outputs):
    prediction = model.predict(np.array([input_data]))
    print(f"Input: {input_data}, Predicted: {round(prediction[0][0])}, Actual: {output_data[0]}")

# Save the model
model.save("or_gate_model.h5")
